<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>s</display-name>
	<!-- <welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list> -->
	
	<!-- 设置applicationContext配置文件的位置，
	如果在web.xml中不写任何参数配置信息，默认的路径是/WEB-INF/applicationContext.xml  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext*.xml</param-value>
	</context-param>
	
	<!-- 启动Web容器时，自动装配ApplicationContext的配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<!-- <init-param> <param-name>forceEncoding</param-name> <param-value>true</param-value> 
			</init-param> -->
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--这个过滤器是用来解决hibernate的延迟加载问题，
	是spring＋hibernate框架结合开发时用到的！把session延迟到页面上关闭。-->
	<filter>
		<filter-name>SpringOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>SpringOpenSessionInViewFilter</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 使spring不拦截js文件和css文件 -->
<!-- 			<servlet-mapping>
			     <servlet-name >default </servlet-name >         
				<url-pattern >*.js</url-pattern>      
				</servlet-mapping >
				<servlet-mapping >
				     <servlet-name >default </servlet-name >             
				<url-pattern >*.css</url-pattern>        
		  </servlet-mapping > -->

			
	<!-- springmvc的前端控制器配置-->
	<!-- 
		contextConfigLocation不是必须的， 如果不配置contextConfigLocation， 
		springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml"
	-->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
				
		<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 　
		/*是拦截所有请求，包括视图解析后跳转的.jsp页面，
		/则不会拦截视图解析后的.jsp页面！ 
		另外记住浏览器是无法直接访问WEB-INF文件夹下的任何文件的，
		必须通过后台servlet返回页面才行
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	<error-page>
		<error-code>404</error-code>
		<location>/errorPage.jsp</location>
	</error-page>
	
	<!-- 设置HttpSession失效时间 -->
     <session-config>
     	<session-timeout>2</session-timeout>
     </session-config>
     
</web-app>  